// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        // Versions for all the dependencies we plan to use. It's particularly useful for kotlin and
        // nav_graph_treasure where the versions of the plugin needs to be the same as the version of the
        // library defined in the app Gradle file
        version_android_gradle_plugin = "3.3.2"
        version_core = "1.0.1"
        version_constraint_layout = "1.1.3"
        version_coroutine = "1.1.0"
        version_firebase_auth = "18.1.0"
        version_firebase_auth_ui = "4.3.1"
        version_firebase_core = "17.0.1"
        version_google_services = "4.3.0"
        version_google_play_services = "17.0.0"
        version_glide = "4.8.0"
        version_kotlin = "1.3.41"
        version_kotlin_coroutines = "1.1.0"
        version_kroto_plus = "0.4.0"
        version_lifecycle_extensions = "2.0.0"
        version_moshi = "1.8.0"
        version_navigation = "1.0.0"
        version_preferences = "1.1.0-rc01"
        version_protobuf = "0.8.9"
        version_retrofit = "2.5.0"
        version_retrofit_coroutines_adapter = "0.9.2"
        version_recyclerview = "1.0.0"
        version_timber = "4.7.1"
        version_camerax = "1.0.0-alpha04"

    }
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
        classpath "com.google.protobuf:protobuf-gradle-plugin:$version_protobuf"
        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:$version_navigation"
        classpath "com.google.gms:google-services:$version_google_services"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
